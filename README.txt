I.
    1. What was the most difficult part of this assignment?
       There are two parts that were most difficult. First was getting regex right enough to filter our correct tokens. Second part was trying to create a inverted index in efficient matter. 
    2. What was the most easiest part?
       I do not thing there was easiest part. But if I have to pick one, it was creating a unique tokens

ii.
All of the Index files are saved in Json format
    • TermIDFile: 
      It’s a python dictionary with term as key and id and document frequency for a term as values.
      {“term” : [temId, document frequency]}
      
    • DocumentIDFile: 
	It’s a python dictionary with file name without .txt extension as key and the name of the file 	and the number of token in the document as values.
	{“docuementId: [document name, number of tokens]}
	
	example: 
	{“55”: [“55.txt”, 350]}

    • InvertedIndex: 
      It’s a python dictionary with term id as a key and the inverted list as values. Each inverted list is consisted of list that contains DocumentID and number of occurrence of this term in the document. 
      {
          “termId: [[documentID, term frequency] , [documentID, term frequency]…],
          “termId: [[documentID, term frequency] , [documentID, term frequency]…]
      }
iii.
    • Query: McDonalds
      Result = [['726', 190], ['870', 1], ['142', 1], ['725', 6], ['380', 2], ['877', 1], ['951', 1], ['686', 2], ['3', 1], ['729', 6], ['719', 2], ['222', 2], ['656', 1], ['728', 5], ['102', 1], ['737', 19]]
      
    • Query = Traditionally
      Results = [['250', 1], ['299', 1], ['559', 1], ['342', 1], ['277', 1], ['249', 1], ['247', 2], ['146', 2], ['283', 2], ['339', 1], ['562', 1], ['254', 1], ['354', 2], ['59', 2], ['674', 1], ['709', 1], ['795', 1], ['156', 1], ['232', 1], ['686', 1], ['319', 1], ['851', 1], ['314', 1], ['145', 3], ['147', 1], ['65', 1], ['412', 1], ['567', 1], ['66', 3], ['891', 1], ['369', 1], ['764', 2], ['126', 1], ['305', 1], ['756', 1], ['245', 1], ['233', 1], ['361', 1], ['318', 1], ['202', 1], ['259', 2], ['243', 2], ['651', 2], ['211', 1], ['230', 1], ['237', 1], ['134', 2], ['153', 2]]

    • Query = name
      Results = [['372', 3], ['250', 3], ['367', 16], ['565', 2], ['181', 1], ['308', 4], ['683', 1], ['299', 8], ['989', 1], ['365', 3], ['69', 37], ['322', 4], ['926', 6], ['303', 7], ['284', 2], ['344', 2], ['403', 1], ['52', 1], ['769', 1], ['271', 20], ['702', 1], ['431', 1], ['309', 10], ['821', 1], ['279', 2], ['116', 1], ['848', 1], ['139', 1], ['256', 1], ['634', 1], ['343', 4], ['241', 10], ['161', 3], ['723', 1], ['374', 1], ['549', 1], ['217', 1], ['409', 1], ['277', 6], ['252', 6], ['901', 1], ['298', 7], ['276', 7], ['297', 1], ['48', 1], ['885', 2], ['264', 1], ['183', 3], ['198', 4], ['249', 4], ['247', 42], ['531', 1], ['146', 51], ['321', 10], ['333', 53], ['889', 1], ['407', 1], ['940', 1], ['283', 10], ['812', 2], ['310', 6], ['339', 8], ['721', 1], ['234', 2], ['265', 7], ['887', 1], ['88', 1], ['347', 1], ['182', 3], ['151', 5], ['61', 4], ['353', 2], ['979', 1], ['266', 2], ['950', 1], ['89', 1], ['388', 1], ['25', 1], ['461', 3], ['800', 2], ['278', 47], ['385', 1], ['194', 3], ['596', 1], ['254', 12], ['632', 1], ['87', 2], ['934', 1], ['64', 1], ['354', 16], ['273', 6], ['94', 1], ['258', 11], ['356', 8], ['692', 1], ['240', 2], ['133', 2], ['552', 1], ['213', 3], ['469', 1], ['410', 1], ['366', 3], ['411', 2], ['975', 2], ['608', 2], ['629', 1], ['59', 59], ['774', 1], ['99', 12], ['63', 2], ['597', 2], ['334', 14], ['547', 1], ['546', 1], ['216', 19], ['677', 1], ['717', 1], ['226', 8], ['348', 1], ['358', 1], ['682', 4], ['707', 1], ['674', 3], ['152', 2], ['795', 1], ['300', 26], ['200', 4], ['172', 7], ['275', 5], ['246', 8], ['294', 3], ['286', 12], ['825', 2], ['282', 3], ['112', 2], ['964', 1], ['958', 1], ['263', 10], ['100', 2], ['111', 1], ['566', 1], ['269', 9], ['752', 1], ['268', 10], ['218', 33], ['98', 25], ['290', 9], ['244', 8], ['554', 1], ['716', 2], ['966', 2], ['302', 6], ['748', 3], ['295', 26], ['623', 3], ['219', 1], ['963', 1], ['858', 1], ['105', 3], ['951', 1], ['232', 3], ['175', 18], ['686', 2], ['820', 1], ['701', 1], ['710', 2], ['224', 20], ['483', 1], ['895', 1], ['239', 1], ['492', 1], ['384', 1], ['377', 1], ['553', 2], ['961', 2], ['68', 12], ['459', 1], ['312', 10], ['296', 6], ['319', 15], ['306', 4], ['414', 1], ['12', 2], ['215', 4], ['47', 1], ['314', 34], ['648', 1], ['368', 7], ['212', 15], ['357', 4], ['178', 1], ['168', 1], ['221', 2], ['80', 1], ['315', 2], ['625', 2], ['417', 1], ['267', 22], ['238', 3], ['145', 51], ['378', 2], ['969', 2], ['724', 2], ['210', 2], ['262', 3], ['485', 1], ['147', 29], ['248', 3], ['228', 2], ['65', 31], ['162', 1], ['270', 14], ['780', 3], ['363', 10], ['3', 1], ['192', 1], ['157', 1], ['2', 15], ['311', 13], ['888', 2], ['567', 4], ['66', 20], ['307', 3], ['416', 1], ['891', 2], ['203', 1], ['324', 2], ['261', 1], ['369', 2], ['323', 5], ['281', 24], ['335', 1], ['62', 1], ['719', 2], ['55', 1], ['291', 10], ['786', 1], ['419', 1], ['872', 1], ['978', 1], ['196', 10], ['404', 2], ['775', 1], ['741', 1], ['316', 2], ['191', 32], ['304', 3], ['272', 46], ['884', 1], ['231', 8], ['364', 2], ['688', 4], ['143', 6], ['329', 16], ['209', 2], ['96', 1], ['687', 1], ['222', 20], ['349', 4], ['656', 1], ['242', 3], ['214', 2], ['257', 5], ['305', 2], ['78', 1], ['450', 2], ['285', 4], ['328', 23], ['881', 1], ['563', 1], ['245', 8], ['42', 4], ['338', 1], ['67', 5], ['227', 19], ['208', 17], ['360', 1], ['60', 1], ['233', 8], ['255', 13], ['154', 2], ['765', 1], ['481', 2], ['93', 1], ['876', 2], ['787', 1], ['318', 18], ['202', 69], ['292', 4], ['108', 1], ['494', 1], ['259', 26], ['770', 1], ['362', 2], ['609', 1], ['437', 1], ['908', 1], ['735', 4], ['235', 3], ['201', 32], ['141', 6], ['288', 26], ['220', 20], ['223', 28], ['204', 2], ['336', 9], ['747', 1], ['243', 11], ['197', 1], ['986', 1], ['651', 2], ['199', 9], ['599', 2], ['205', 5], ['280', 9], ['118', 1], ['211', 3], ['859', 1], ['662', 1], ['878', 1], ['960', 1], ['171', 3], ['647', 1], ['236', 35], ['253', 1], ['230', 86], ['34', 9], ['695', 2], ['930', 1], ['134', 2], ['737', 3], ['251', 2], ['164', 2], ['229', 4], ['153', 30]]

iv.
      Instruction to run RunDataTransformer and CreateIndex script:
      1. Scripts and program are written in python 3
      
      2. Run the script by using the following commands:
        1. for RunDataTransformer:
           /RunDataTransformer.py filesCrawled 1000
           
        2. for CreateIndex:
           ./RunDataTransformer.py filesCrawled 1000
       
      3. If the script doesn’t run you might need to assign execution permissions by using the following command:
        ◦ Chmod +x  RunDataTransformer.py or Chmod +x  CreateIndex.py
      
      4. Currently the first line of the script where it begins with “!” is set to 
              “#! /usr/bin/python3”. 
      If “bad interpreter: Permission denied” error occurs, used the following steps: 
              	1. type “which python3”: this command will tell you to the location where your 
                  python3 is installed
             	 2. Copy the path of the python3 location then replace the first line of the script 
                  file with it
              	3. Save the script file then run it 
